rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasValidApiKey(storeId) {
      let store = get(/databases/$(database)/documents/stores/$(storeId));
      return request.auth.token.apiKey == store.data.apiKey;
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Stores collection
    match /stores/{storeId} {
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                               resource.data.userId == request.auth.uid;
    }
    
    // Products collection (API key auth)
    match /products/{productId} {
      allow read, write: if isAuthenticated();
    }
    
    // Orders collection (API key auth)
    match /orders/{orderId} {
      allow read, write: if isAuthenticated();
    }
    
    // Recommendations collection
    match /recommendations/{recId} {
      allow read, write: if isAuthenticated();
    }
    
    // Conversions collection
    match /conversions/{convId} {
      allow read, write: if isAuthenticated();
    }
    
    // Analytics collection
    match /analytics_daily/{docId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only via Cloud Functions
    }
  }
}
